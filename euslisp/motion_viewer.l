;; dump-loadable-structureで保存したものを(1)再生(2)gifに保存する(3)一枚ずつのpngにするプログラム

(require "package://hrpsys_ros_bridge_tutorials/euslisp/jaxon_red-interface.l")
(setq robot (jaxon_red))

(make-irtviewer)
(objects (list robot))
;; dump-loadable-structureでの関数

(defun gif (fname)
  (send *irtviewer* :logging :clear)
  (send *irtviewer* :logging :start)  
  (mapc #'(lambda (av rc)
	    (send robot :angle-vector av)
	    (send robot :fix-leg-to-coords (make-coords) :both)	
	    (send *irtviewer* :draw-objects)
	    )
	*bspline-av-list*
	*bspline-rc-list*
	)
  (send *irtviewer* :save-animgif :fname fname)
  (send *irtviewer* :logging :stop)
  )

(defun rgif (fname)
  (send *irtviewer* :logging :clear)
  (send *irtviewer* :logging :start)  
  (mapc #'(lambda (av rc)
	    (send robot :angle-vector av)
	    (send robot :fix-leg-to-coords (make-coords) :both)	
	    (send *irtviewer* :draw-objects)
	    )
	(reverse *bspline-av-list*)
	(reverse *bspline-rc-list*)
	)
  (send *irtviewer* :save-animgif :fname fname)
  (send *irtviewer* :logging :stop)
  )

(defun view ()
  (mapc #'(lambda (av rc)
	    (send robot :angle-vector av)
	    (send robot :fix-leg-to-coords (make-coords) :both)
	    (send *irtviewer* :draw-objects)
	    )
	*bspline-av-list* *bspline-rc-list*
	)
  )

(defun rview ()
  (mapc #'(lambda (av rc)
	    (send robot :angle-vector av)
	    (send robot :fix-leg-to-coords (make-coords) :both)
	    (send *irtviewer* :draw-objects)
	    )
	(reverse *bspline-av-list*)
	(reverse *bspline-rc-list*)
	)
  )

(defun png (fname)
  (setq count 1)
  (mapc #'(lambda (av rc)
	    (send robot :angle-vector av)
	    (send robot :fix-leg-to-coords (make-coords) :both)
	    (send *irtviewer* :draw-objects)
	    (send *irtviewer* :save-mpeg :fname (concatenate string fname (princ-to-string count)))
	    (incf count)
	    )
	*bspline-av-list*
	*bspline-rc-list*
	)
  )

(defun rpng (fname)
  (setq count 1)
  (mapc #'(lambda (av rc)
	    (send robot :angle-vector av)
	    (send robot :fix-leg-to-coords (make-coords) :both)
	    (send *irtviewer* :draw-objects)
	    (send *irtviewer* :save-mpeg :fname (concatenate string fname (princ-to-string count)))
	    (incf count)
	    )
	(reverse *bspline-av-list*)
	(reverse *bspline-rc-list*)
	)
  )
